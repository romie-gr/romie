# .goreleaser.yml proposed options for Romie
builds:
  - id: romie
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
      - freebsd
      - openbsd
      - netbsd
      - dragonfly
    goarch:
      - 386
      - amd64
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: 386, arm
      - goos: windows
        goarch: arm, arm64
      - goos: freebsd
        goarch: arm64
      - goos: netbsd
        goarch: arm64
      - goos: dragonfly
        goarch: 386, arm, arm64
    goarm:
      - 6
      - 7
    mod_timestamp: "{{ .CommitTimestamp }}"
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser

dockers:
  - goos: linux
    goarch: amd64
    binaries:
    - romie
    image_templates:
      - "romie/romie:latest"
      - "romie/romie:{{ .Tag }}"
    skip_push: false
    dockerfile: Dockerfile
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"

nfpms:
  - id: "default"

    package_name: romie

    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

    builds:
      - romie

    replacements:
      amd64: 64-bit
      386: 32-bit
      darwin: macOS
      arm: ARM
      arm64: ARM64
      linux: Linux
      windows: Windows
      openbsd: OpenBSD
      netbsd: NetBSD
      freebsd: FreeBSD
      dragonfly: DragonFlyBSD

    vendor: Romie Team.

    homepage: https://github.com/drpaneas/romie

    maintainer: Bill <blee571575@live.com>

    description: Software for crawling rom sites and searching for roms.

    license: Apache 2.0

    formats:
      - apk
      - deb
      - rpm

    dependencies:
      - git

    recommends:

    suggests:

    conflicts:

    # Default: /usr/local/bin
    bindir: /usr/bin

    epoch: 1

    release: 1

    # Makes a meta package - an empty package that contains only supporting files and dependencies.
    # When set to `true`, the `builds` option is ignored.
    # Default: false.
    meta: false

    # Empty folders that should be created and managed by the packager
    # implementation.
    # Default is empty.
    empty_folders:

    # Files to add to your package (beyond the binary).
    # Keys are source paths/globs to get the files from.
    # Values are the destination locations of the files in the package.
    # Use globs to add all contents of a folder.
    files:

    # Config files to add to your package. They are about the same as
    # the files keyword, except package managers treat them differently (while
    # uninstalling, mostly).
    # Keys are source paths/globs to get the files from.
    # Values are the destination locations of the files in the package.
    config_files:

    # Scripts to execute during the installation of the package.
    # Keys are the possible targets during the installation process
    # Values are the paths to the scripts which will be executed
    # example:
    # preinstall: "scripts/preinstall.sh"
    # postinstall: "scripts/postinstall.sh"
    # preremove: "scripts/preremove.sh"
    # postremove: "scripts/postremove.sh"
    scripts:

    # Some attributes can be overrided per package format.
    overrides:
      deb:
        conflicts:
        dependencies:
        suggests:
        recommends:
        empty_folders:
      rpm:
        replacements:
          amd64: x86_64
        file_name_template: "{{ .ProjectName }}-{{ .Version }}-{{ .Arch }}"
        files:
        config_files:
        scripts:
